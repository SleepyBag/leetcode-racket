(define/contract (change amount coins [cnt (vector-append (vector 1) (make-vector amount 0))])
  (->* (exact-integer? (listof exact-integer?)) ((vectorof exact-integer?)) exact-integer?)
     (if (null? coins)
         (vector-ref cnt amount)
         (let ([coin (car coins)])
           (for ([i (range 0 (add1 amount))])
                (when (<= (+ i coin) amount) 
                      (vector-set! cnt (+ i coin) 
                                   (+ (vector-ref cnt (+ i coin)) (vector-ref cnt i))))
                )
           (change amount (cdr coins) cnt)
           )
         )
  )
