(define/contract (frequency-sort s)
  (-> string? string?)
     (list->string 
      (let ([cnt
             (let count ([s (string->list s)])
               (if (null? s)
                   (hash)
                   (hash-update (count (cdr s)) (car s) add1 1)
                   )
               ) ])
        (sort (string->list s)
              (lambda (a b) 
                (or (> (hash-ref cnt a) (hash-ref cnt b)) 
                    (and (= (hash-ref cnt a) (hash-ref cnt b))
                         (char<? a b)))
                )
              )
        )
      )
  )
