(define/contract (last-stone-weight-ii stones [dp (append (make-list 3000 #f) '(#t) (make-list 3000 #f))])
  (->* ((listof exact-integer?)) ((listof boolean?)) exact-integer?)
     (if (null? stones)
         (apply min (map (lambda (i x) (if x (abs (- i 3000)) 10000000)) (range 0 6001) dp))
         (last-stone-weight-ii (cdr stones)
                               (map (lambda (a b) (or a b))
                                    (take (append (make-list (car stones) #f) dp) 6001)
                                    (take-right (append dp (make-list (car stones) #f)) 6001)
                                    )
                               )
         )
  )
