(define/contract (roman-to-int s)
    (-> string? exact-integer?)
  (let ((dict '(("M" . 1000)
                ("CM" . 900)
                ("D" . 500)
                ("CD" . 400)
                ("C" . 100)
                ("XC" . 90)
                ("L" . 50)
                ("XL" . 40)
                ("X" . 10)
                ("IX" . 9)
                ("V" . 5)
                ("IV" . 4)
                ("I" . 1)))
        (ans 0))
    (do ()
        ((string=? s ""))
      (let ((pair (list-ref dict 
                            (index-where dict (lambda (pair) 
                                                (string-prefix? s (car pair)))))))
        (set! ans (+ ans (cdr pair)))
        (set! s (substring s (string-length (car pair))))
        )
      )
    ans
    )

  )
